---
stages:
  - test
  - build
  - release

variables:
  SEMVER_PREFIX: v
  CONTAINER_FILE_LOCATION: "Containerfile"
  KANIKO_ARGS: --destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}

.go_template_defaults:
  stage: test
.semver_template_defaults:
  stage: release
.kaniko_template_defaults:
  stage: build
include:
  - { project: bonsai-oss/organization/automate/ci-templates, file: templates/language/go.yml }
  - { project: bonsai-oss/organization/automate/ci-templates, file: templates/release/semver.yml }
  - { project: bonsai-oss/organization/automate/ci-templates, file: templates/release/kaniko.yml }

integration test:
  image: golang:1.22
  stage: test
  needs:
    - go test
  parallel:
    matrix:
      - CUSTOM_ENV_CI_JOB_IMAGE:
          - debian-12
          - ubuntu:latest
        CUSTOM_ENV_HCLOUD_SERVER_TYPE:
          - auto
        CUSTOM_ENV_HCLOUD_SERVER_ARCHITECTURE:
          - amd64
          - arm64
  before_script:
    - make build
  script:
    - ./bin/hmp --version
    - ./bin/hmp prepare --job-id "$CI_JOB_ID"
    - ./bin/hmp exec <(echo -e '#!/usr/bin/env bash\ncat /etc/os-release') test1
    - ./bin/hmp exec <(echo -e '#!/usr/bin/env bash\necho "Hello, World!"') test2 | grep "Hello, World!"
  after_script:
    - ./bin/hmp cleanup --job-id "$CI_JOB_ID"

build release binaries:
  image: golang:1.22
  stage: build
  parallel:
    matrix:
      - GOOS: [linux, windows, darwin, freebsd, openbsd]
        GOARCH: [amd64, arm64]
  script:
    - make build
    - mv bin/hmp bin/hmp-${GOOS}-${GOARCH}
  artifacts:
    paths:
      - bin/hmp-${GOOS}-${GOARCH}
    expire_in: 1 hour

release:
  image: alpine:latest
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build release binaries
      artifacts: true
  script:
    - ls -l bin
  artifacts:
    paths:
      - bin
